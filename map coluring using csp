# Map coloring problem using CSP
colors = ['Red', 'Green', 'Blue']
regions = ['A', 'B', 'C', 'D']
neighbors = {
    'A': ['B', 'C'],
    'B': ['A', 'C', 'D'],
    'C': ['A', 'B', 'D'],
    'D': ['B', 'C']
}
solution = {}

def is_valid(region, color):
    for neighbor in neighbors[region]:
        if neighbor in solution and solution[neighbor] == color:
            return False
    return True

def solve(index=0):
    if index == len(regions):
        return True
    region = regions[index]
    for color in colors:
        if is_valid(region, color):
            solution[region] = color
            if solve(index + 1):
                return True
            del solution[region]
    return False

if solve():
    print("Solution:", solution)
else:
    print("No solution found.")
